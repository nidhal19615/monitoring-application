name: monitoring CI CD

on:
  push:
    branches:
      - main

jobs:
  sonarQubeScan:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: SonarQube Scan
        run: |
          docker run --rm \
            -e SONAR_HOST_URL=http://172.20.10.6:9000 \
            -e SONAR_LOGIN=squ_70cc7692c405f3b506d0d6da4d820683b3065396 \
            -v $(pwd):/usr/src \
            sonarsource/sonar-scanner-cli:latest \
            -Dsonar.projectKey=nidhal19615_monitoring-application_AZJ9vv0YA4FHz0QgS9S2 \
            -Dsonar.sources=/usr/src \
            -Dsonar.login=squ_70cc7692c405f3b506d0d6da4d820683b3065396

  publish_image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: |
          docker build --no-cache -t nidhal2/pfe:latest .

      - name: Publish
        run: |
          docker login -u nidhal2 -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push nidhal2/pfe:latest

#      - name: "Login via Azure CLI"
#        id: azure_login
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}

#      - name: Check Azure Login
#        run: |
#          az account show

#      - name: Get AKS Credentials
#        if: steps.azure_login.outcome == 'success'  # Only get credentials if Azure login was successful
#        run: az aks get-credentials --resource-group ressource-pfe --name cluster-pfe --overwrite-existing

#      - name: K8S Deploy
#        if: steps.azure_login.outcome == 'success'  # Only deploy if Azure login was successful
#        uses: azure/k8s-deploy@v1
#        with:
#          namespace: default
#          manifests: |
#            manifests/react.yml
#            manifests/postgres.yml
#            manifests/keycloak.yml

# cd ~/actions-runner
#./run.sh
